import esbuild from 'esbuild'
import process from 'process'
import builtins from 'builtin-modules'
import dts from 'npm-dts'
import external from 'esbuild-node-externals'
import tsc from 'esbuild-plugin-tsc'

const banner = `/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/
`
const { Generator } = dts
await new Generator({
  entry: 'src/index.ts',
  output: 'dist/index.d.ts'
}).generate()

const { nodeExternalsPlugin } = external
const { esbuildPluginTsc } = tsc
const prod = process.argv[2] === 'production'
const sharedConfig = {
  banner: {
    js: banner
  },
  entryPoints: ['src/index.ts'],
  bundle: true,
  packages: 'external',
  external: [...builtins],
  target: 'ES6',
  logLevel: 'info',
  sourcemap: prod ? false : 'inline',
  treeShaking: true,
  tsconfig: 'tsconfig.json',
  plugins: [
    nodeExternalsPlugin({
      packagePath: './package.json'
    }),
    esbuildPluginTsc({
      force: true,
      tsx: true
    })
  ]
}

const moduleContext = await esbuild.context({
  ...sharedConfig,
  format: 'esm',
  platform: 'neutral',
  outfile: 'dist/index.modern.js'
})
if (prod) {
  await moduleContext.rebuild()
  process.exit(0)
} else {
  await moduleContext.watch()
}
